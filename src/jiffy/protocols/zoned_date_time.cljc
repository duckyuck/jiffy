(ns jiffy.protocols.zoned-date-time
  (:require [clojure.spec.alpha :as s]))

(defprotocol IZonedDateTime
  (with-fixed-offset-zone [this])
  (get-year [this])
  (get-month-value [this])
  (get-month [this])
  (get-day-of-month [this])
  (get-day-of-year [this])
  (get-day-of-week [this])
  (get-hour [this])
  (get-minute [this])
  (get-second [this])
  (get-nano [this])
  (with-year [this year])
  (with-month [this month])
  (with-day-of-month [this day-of-month])
  (with-day-of-year [this day-of-year])
  (with-hour [this hour])
  (with-minute [this minute])
  (with-second [this second])
  (with-nano [this nano-of-second])
  (truncated-to [this unit])
  (plus-years [this years])
  (plus-months [this months])
  (plus-weeks [this weeks])
  (plus-days [this days])
  (plus-hours [this hours])
  (plus-minutes [this minutes])
  (plus-seconds [this seconds])
  (plus-nanos [this nanos])
  (minus-years [this years])
  (minus-months [this months])
  (minus-weeks [this weeks])
  (minus-days [this days])
  (minus-hours [this hours])
  (minus-minutes [this minutes])
  (minus-seconds [this seconds])
  (minus-nanos [this nanos])
  (to-offset-date-time [this]))

(s/def ::zoned-date-time #(satisfies? IZonedDateTime %))
